spring.application.name=order-management-service
server.port=8102
eureka.client.service-url.default-zone=http://172.31.23.185:8761
#eureka.client.service-url.default-zone=http://localhost:8761
# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
#spring.datasource.url = jdbc:mysql://localhost:3306/ordermyfood
#
## Username and password
#spring.datasource.username = root
#spring.datasource.password = root@123
#
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#
## ===============================
## = JPA / HIBERNATE
## ===============================
#
## Use spring.jpa.properties.* for Hibernate native properties (the prefix is
## stripped before adding them to the entity manager).
#
## Show or not log for each sql query
#spring.jpa.show-sql = true
#
## Hibernate ddl auto (create, create-drop, update): with "update" the database
## schema will be automatically updated accordingly to java entities found in
## the project
#spring.jpa.hibernate.ddl-auto = update
#
## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jackson.serialization.write-dates-as-timestamps=false
#logging.level.org.springframework = info
#
#hystrix.metrics.enabled=true
#hystrix.enabled=true
#management.endpoint.hystrix.stream.enabled=true
#management.endpoints.web.exposure.include=*
#
#
##Kafka config props:
#spring.kafka.bootstrap-servers=127.0.0.1:9092
###Consumer Deserialization:
#spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.group-id=myGroupId
#spring.kafka.consumer.enable-auto-commit=false
#spring.kafka.listener.missing-topics-fatal=false
###Producer Serialization:
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

